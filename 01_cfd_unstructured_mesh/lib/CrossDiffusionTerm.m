function jf = CrossDiffusionTerm( phi_v, GeometryProperties )
% J(T,f) = jf*lf
% based on interpolated phi_v and tf in the face regardless whether the
% face is located on boundary
[...
                            ~, nfaces, ~, ~, ...
                            ~, ~, verts, ...
                            ~, ~, ~, areaf, ...
                            ~, ~, ~, ...
                            ~, ...
                            ~, ...
                            link_face_to_node ...
                            ] =   GeometryProperties{:};
                        
for ifc = 1:nfaces
    tf = verts(link_face_to_node(ifc,2),:) - verts(link_face_to_node(ifc,1),:); % sign of tf is not important
    dphi_v = phi_v(link_face_to_node(ifc,2)) - phi_v(link_face_to_node(ifc,1)); % Keep same direction with tf
    jf(ifc,:) = dphi_v*tf/areaf(ifc,1)^2;
end

end

